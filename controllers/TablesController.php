<?php
/**
 *
 * @package    Material Dashboard Yii2
 * @author     CodersEden <hello@coderseden.com>
 * @link       https://www.coderseden.com
 * @copyright  2020 Material Dashboard Yii2 (https://www.coderseden.com)
 * @license    MIT - https://www.coderseden.com
 * @since      1.0
 */
namespace app\controllers;
use app\models\User;
use yii\base\Model;
use app\models\Workers;
use app\models\Time_list;
use app\models\Clm_list_time;
use app\models\Time_model;
use app\models\List_time_search;
use app\models\WorkersSearch;
use yii\data\ActiveDataProvider;
use Yii;
use yii\web\NotFoundHttpException;
use app\models\Timesheet;



/**
 * Class TablesController
 * @package app\controllers
 */
class TablesController extends \yii\web\Controller
{
	/**
	 * @param \yii\base\Action $action
	 *
	 * @return bool|void
	 * @throws \yii\web\BadRequestHttpException
	 */
	// public function beforeAction( $action )
	// {
	// 	if ( \Yii::$app->getUser()->isGuest ) {
	// 		return \Yii::$app->getResponse()->redirect( \yii\helpers\Url::to(['/']) )->send();
	// 	}
	// 	return parent::beforeAction( $action ); // TODO: Change the autogenerated stub
	// }

	/**
	 * @return string
	 */
    public function actionIndex()
    {

//        $dataProvider = new ActiveDataProvider([
//                'query' => Clm_list_time::find(),
//                'pagination' => [
//                    'pagesize' => 5,
//                    ],
//                'sort' => [
//                'defaultOrder' => [
//                    'data' => SORT_DESC,
//                     ],
//                ],
//            ]);
        $searchModel = new List_time_search();
        $dataProvider = $searchModel->search(Yii::$app->request->get());
        $workList = Workers::Find()->all();
        $list_time = Clm_list_time::Find()->all();



        return $this->render('index',['workList'=>$workList, 'list_time'=>$list_time,
                                'dataProvider'=>$dataProvider,'searchModel' => $searchModel]);
    }

    public function actionCash(){
        $getTimeList = Clm_list_time::getTimeList();
        return $this->render('cash',['getTimeList' => $getTimeList]);
    }

    public function actionUpdate()
    {
        $id = Yii::$app->request->get('id');
        $time = (int)Yii::$app->request->get('time');
        $time = !$time ? null : $time;
        $idworker = Workers::findOne($id);
        if(empty($idworker)) return false;
        $session = Yii::$app->session;
        $session->open();
        $list = new Time_list();
        $list->addToList($idworker, $time);
//            debug($session['Time_list']);
//        debug($session['Time_list.week_time']);
        $this->layout = false;
        return $this->render('time-modal',compact('session'));

    }

    public function actionClear(){
        $session = Yii::$app->session;
        $session->open();
        $session->remove('Time_list');
        $this->layout = false;
        return $this->render('time-modal',compact('session'));
    }

    public function actionDelItem(){
        $id = Yii::$app->request->get('id');
        $session = Yii::$app->session;
        $session->open();
        $list = new Time_list();
        $list->recalc($id);
        $this->layout = false;
        return $this->render('time-modal',compact('session'));
    }

    public function actionShow(){
        $session = Yii::$app->session;
        $session->open();
        $this->layout = false;
        return $this->render('time-modal',compact('session'));
    }

    public function actionTime(){
        $id = Yii::$app->request->get('id');
        $time = Yii::$app->request->get('time');
        $session = Yii::$app->session;
        $session->open();
        $list = new Time_list();
        $list->addtime($id,$time);
        $this->layout = false;
        return $this->render('time-modal',compact('session'));
    }

    public function actionSafe(){
//        $this->layout=false;
        $session =Yii::$app->session;
        $session->open();
        $time = new Time_model();

        if ($time->load(Yii::$app->request->post()) && $time->validate()) {
            $this->saveWorkerTime($session['Time_list'],$time->data);
            $session->remove('Time_list');
            return $this->redirect(['tables/index']);
        }

        return $this->render('safe', compact('time'));
    }

    protected function saveWorkerTime($items, $data){
        foreach ($items as $id => $item) {
            $worker = new Clm_list_time();
            $worker->id_worker = $item['id'];
            $worker->data = $data;
            $worker->name = $item['name'];
            $worker->last_name = $item['last_name'];
            $worker->day_time = $item['week_time'];
            $worker->save();
        }

    }

    public function actionEmployess(){
        $searchModel = new WorkersSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->get());
        $dataProvider->pagination->pageSize=10;
        return $this->render('employess',[
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionCreate()
    {
        $model = new Workers([
            'scenario' => Workers::SCENARIO_CREATE
        ]);

        \Yii::$app->view->title = \Yii::t('app', 'Create User');

        if ($model->load(\Yii::$app->getRequest()->post()) && $model->save()) {
            return $this->redirect(['employess']);
        } else {
            return $this->render('form', [
                'action'=> 'create',
                'model' => $model,
            ]);
        }
    }

    public function actionView($id)
    {
        $model = $this->findModel($id);

        \Yii::$app->view->title = \Yii::t('app', 'Workers {userName}', ['userName'=>$model->fullName]);

        return $this->render('view', [
            'model' => $model,
        ]);
    }

    public function actionDelete($id)
    {
        $model = $this->findModel($id);

        $model->delete();

        return $this->redirect(['employess']);
    }


    public function actionUpdateus($id)
    {
        $model = $this->findModel($id);
//        $user = \Yii::$app->getRequest()->post('User');

        if ($model->load(\Yii::$app->getRequest()->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->id]);
        } else {
            \Yii::$app->view->title = \Yii::t('app', 'Workers {userName}', ['userName'=>$model->fullName]);

            return $this->render('form', [
                'action'=> 'update',
                'model' => $model,
            ]);
        }
    }

        public function actionTimesheet()
    {
        $workers = Workers::find()->all();
        $timesheet = [new Timesheet()];
        $count = count($workers);

        for($i = 1; $i < $count; $i++) {
            $timesheet[] = new Timesheet();
        }

        if (Model::loadMultiple($timesheet, Yii::$app->request->post()) && Model::validateMultiple($timesheet)) {
            foreach ($timesheet as $heet) {
                $heet->data='17.03.2021';

                //Try to save the models. Validation is not needed as it's already been done.
                $heet->save(false);

            }
            return $this->redirect(['timesheet']);
        } else {
            return $this->render('timesheet', [
                'workers' => $workers,
                'timesheet' => $timesheet,
            ]);
        }
    }



    protected function findModel($id)
    {
        if (($model = Workers::findOne($id)) !== null) {
            return $model;
        }
        throw new NotFoundHttpException('The requested page does not exist.');
    }


}
